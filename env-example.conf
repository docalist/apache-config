# ------------------------------------------------------------------------------
# Config d'un environnement (fichier d'exemple à recopier ou à renommer).
#
# Ce fichier contient la configuration apache (>=2.4) permettant de créer le
# site en local (pour développer).
#
# Il se contente de définir des variables puis charge le fichier main.conf.
#
# Pour charger ce fichier dans apache, le plus simple est de l'inclure dans le
# fichier de configuration principal d'apache (apache/conf/httpd.conf) en y
# ajoutant une ligne similaire à la suivante :
#
# > Include d:/sites/site/config/apache/env-dev.conf
# (vous devez utiliser des slashs et non des antislashs même sous windows)
#
# Sous debian, la méthode recommandée consiste à créer des liens symboliques dans
# les répertoires "sites-available" et "sites-enabled" de la configuration
# d'apache (/etc/apache2). Par exemple :
#
# > cd /etc/apache2/sites-available/
# > sudo ln -s /var/www/site/config/apache/env-dev.conf 00x-site.localhost.conf
# > cd ../sites-enabled/
# > sudo ln -s ../sites-available/00x-site.localhost.conf
#
# Pour utiliser ce fichier de config, les modules apache suivants doivent être
# activés dans le fichier de configuration principal d'apache :
#
# - vhost_alias_module (pour pouvoir définir des vhosts)
# - alias_module (pour la directive RedirectMatch utilisée pour protéger certains fichiers)
# - rewrite_module (pour avoir des urls propres dans WordPress)
# - log_config_module (pour les logs, uniquement si la variable LOGS_DIRS est définie)
# - mod_authz_core, authz_user_module, mod_authn_core et mod_authn_file (pour protéger
#   l'accès au site, uniquement si la variable SITE_AUTH est définie).
#
# DM, 19/10/17
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Variable SITE_ROOT : répertoire de base du site (racine).
#
# Utilisé pour définir les directives DocumentRoot et Directory du vhost.
# - Indiquez un path absolu.
# - Utilisez des slashs et non pas des antislashs.
# - Ne pas indiquer le slash de fin.
# - Le suffixe "/web" sera ajouté au path indiqué.
#
# Exemples :
# - Define SITE_ROOT /var/www/site.docalist.org  <- Serveur, debian-based
# - Define SITE_ROOT d:/web/site                 <- Daniel, en local, windows
# ------------------------------------------------------------------------------
Define SITE_ROOT d:/web/site

# ------------------------------------------------------------------------------
# Variable SITE_NAME : adresse du site sans www.
#
# Sert à définir le nom de base du site (ServerName).
# - Ne pas inclure 'http://'.
# - Ne pas inclure 'www'.
# - N'indiquez pas le slash final.
# ------------------------------------------------------------------------------
Define SITE_NAME site

# ------------------------------------------------------------------------------
# Variable USE_WWW : indique si l'url canonique du site contient ou non le
# préfixe "www.".
#
# Si cette variable n'est pas définie (utilisez 'UnDefine USE_WWW'), l'adresse
# canonique du site sera la version sans le préfixe "www." et une redirection
# "www" -> "pas de www" sera mise en place.
#
# Si elle est définie ('Define USE_WWW'), c'est l'inverse : l'adresse canonique
# du site aura le préfixe www et une redirection "pas de www" -> "www" sera mise
# en place.
# ------------------------------------------------------------------------------
UnDefine USE_WWW
# Define USE_WWW

# ------------------------------------------------------------------------------
# Variable USE_SSL : indique si le site est disponible en https.
#
# Si cette variable n'est pas définie (utilisez 'UnDefine USE_SSL'), le site
# sera disponible uniquement en http.
#
# Si elle est définie ('Define USE_SSL'), le site sera disponible en https
# et une redirection http->https sera mise en place.
# ------------------------------------------------------------------------------
UnDefine USE_SSL
# Define USE_SSL

# ------------------------------------------------------------------------------
# Variable HTTP2 : indique si le site utilise le protocole http/2.
#
# Si cette variable n'est pas définie (utilisez 'UnDefine HTTP2'), le site 
# sera disponible uniquement en http/1.1.
#
# Si elle est définie ('Define HTTP2'), le site sera disponible en http/2 et 
# en http/1.1 (une directive "Protocols h2 http/1.1" est ajoutée au site).
#
# Important http/2 n'est supporté que sur les sites en https (cf. USE_SSL). 
# ------------------------------------------------------------------------------
UnDefine HTTP2
# Define HTTP2

# ------------------------------------------------------------------------------
# Variable LOGS_DIR : permet de définir un répertoire spécifique pour les logs
# du site.
#
# Si cette variable n'est pas définie (utilisez 'UnDefine LOGS_DIR'), apache
# utilise les directives par défaut définies dans le fichier de configuration
# principal d'apache (apache/conf/httpd.conf) et (en général) stocke les logs
# du site dans le répertoire apache/logs.
# Lorsque cette variable est définie, le fichier common.conf définit les
# directives ErrorLog et CustomLog de façon à ce qu'apache génére des fichiers
# de la forme SITE_NAME-error.log et SITE_NAME-access.log dans le répertoire
# indiqué.
# - Indiquez un path absolu.
# - Utilisez des slashs et non pas des antislashs.
# - Ne pas indiquer le slash de fin.
# - Le répertoire indiqué doit exister et apache doit avoir les droits requis.
# ------------------------------------------------------------------------------
#Define LOGS_DIR d:/temp/logs
UnDefine LOGS_DIR

# ------------------------------------------------------------------------------
# Variable SITE_AUTH : Indique si le site est protégé par login/mot de passe.
# 
# Si cette variable est définie (Define SITE_AUTH), l'accès au site sera protégé
# et l'utilisateur devra fournir l'un des logins / mot de passe indiqués dans le
# fichier /config/apache/.htpasswd.
# Si l'accès au site n'est pas protégé, indiquez : UnDefine SITE_AUTH.
# - Par défaut, seul le site de test est protégé, les sites de prod et de dev
#   sont en accès libre.
# - La variable SITE_AUTH ne prend pas de valeur (soit elle est définie, soit
#   elle ne l'est pas).
# - En local (environnement dev), définir SITE_AUTH n'aura aucun effet car
#   l'accès depuis SITE_IP est toujours autorisé (cf. ci-dessous).
# ------------------------------------------------------------------------------
#Define SITE_AUTH
UnDefine SITE_AUTH

# ------------------------------------------------------------------------------
# SITE_IP : Adresse IP du site / du serveur
# 
# Utilisée uniquement si le fichier est protégé par login/mot de passe pour
# permettre au site de s'appeller lui-même (exemple : wp-cron).
# Lorsque SITE_AUTH est définie, le fichier common.conf ajoute une directive
# de la forme Allow From SITE_IP.
# ------------------------------------------------------------------------------
Define SITE_IP 127.0.0.1

# ------------------------------------------------------------------------------
# PHP_FPM_VERSION : Version de php-fpm à utiliser
#
# Sur le serveur, plusieurs versions de PHP sont disponibles (via fpm).
# Lorsque PHP_FPM n'est pas définie, le site utilise la config php par défaut.
# Si elle est définie, elle doit contenir un numéro de version disponible
# (par exemple 56 pour la version 5.6.x de php, 72 pour la version 7.2.x, etc.)
# et une directive SetHandler "proxy:fcgi://127.0.0.1:90XX" est ajoutée dans
# la config (XX = numéro de version indiquée). 
# ------------------------------------------------------------------------------
UnDefine PHP_FPM_VERSION
# Define PHP_FPM_VERSION 72

# ------------------------------------------------------------------------------
# Terminé.
#
# Charge la config commune aux différents environnements.
# ------------------------------------------------------------------------------
Include ${SITE_ROOT}/vendor/docalist/apache-config/main.conf